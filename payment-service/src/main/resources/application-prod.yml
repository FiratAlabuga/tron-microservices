spring:
  application:
    name: payment-service

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false

  kafka:
    bootstrap-servers: ${KAFKA_BROKERS}

    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: payment-service-prod
      max-poll-records: 500

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      linger-ms: 10

    listener:
      ack-mode: batch
      idle-event-interval: 60000

    properties:
      spring.json.value.default.type: com.tron.events.dto.PaymentCreatedEvent,com.tron.events.dto.PaymentCompletedEvent,com.tron.events.dto.PaymentRollbackEvent

kafka:
  topics:
    payment-created: payment.created
    payment-completed: payment.completed
    payment-rollback: payment.rollback

logging:
  level:
    root: WARN
    org.apache.kafka: ERROR
    org.springframework.kafka: INFO
